traefik:
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  ingressClass:
    enabled: true
    isDefaultClass: true
    name: "traefik"
  experimental:
    kubernetesGateway:
      enabled: false
  gateway:
    enabled: true
    name: ""
    namespace: ""
    annotations: {}
    infrastructure: {}
    listeners:
      web:
        port: 8000
        hostname: ""
        protocol: HTTP
        namespacePolicy:
  gatewayClass:
    enabled: true
    name: ""

  # tlsOptions:
  #   default:
  #     labels: {}
  #     sniStrict: true
  #   custom-options:
  #     labels: {}
  #     curvePreferences:
  #       - CurveP521
  #       - CurveP384
  tlsStore:
    default:
      defaultCertificate:
        secretName: k0s-fullstack-wildcard

  ports:
    web:
      redirections:
        entryPoint:
          to: websecure
          scheme: https

  ingressRoute:
    dashboard:
      enabled: false
      annotations: {}
      labels: {}
      matchRule: Host(`traefik.k0s-fullstack.fredcorp.com`)
      middlewares:
      - name: authentik
        namespace: authentik
      services:
        - name: api@internal
          kind: TraefikService
      entryPoints: ["web","websecure"]
      tls: {}
  providers:
    kubernetesCRD:
      enabled: true
      allowCrossNamespace: true
      allowExternalNameServices: true
      allowEmptyServices: true
    kubernetesIngress:
      enabled: true
      allowExternalNameServices: true
      allowEmptyServices: true
      publishedService:
        enabled: true
    kubernetesGateway:
      enabled: false
  logs:
    general:
      level: "INFO"  # @schema enum:[TRACE,DEBUG,INFO,WARN,ERROR,FATAL,PANIC]; default: "INFO"
  globalArguments:
  - "--global.checknewversion"
  - "--global.sendanonymoususage"
  additionalArguments: []
  service:
    enabled: true
    single: true
    type: LoadBalancer
    loadBalancerSourceRanges: []
    ipFamilyPolicy: PreferDualStack
  autoscaling:
    enabled: false
  priorityClassName: "system-cluster-critical"
  tolerations:
  - key: "CriticalAddonsOnly"
    operator: "Exists"
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Exists"
    effect: "NoSchedule"
  - key: "node-role.kubernetes.io/master"
    operator: "Exists"
    effect: "NoSchedule"