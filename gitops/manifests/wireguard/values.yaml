---
wg-portal:
  image:
    repository: wgportal/wg-portal
  #   pullPolicy: IfNotPresent
  #   tag: '1.0.19'
  podSecurityContext:
    sysctls:
      - name: net.ipv4.ip_forward
        value: '1'
      - name: net.ipv4.conf.all.src_valid_mark
        value: '1'
  securityContext:
    # privileged: true
    capabilities:
      add:
        - NET_ADMIN
        # - SYS_MODULE

  # Trusted cert config (OIDC)
  volumes:
    - name: trusted-certs
      secret:
        defaultMode: 420
        secretName: wireguard-trusted-certs
  volumeMounts:
    - name: trusted-certs
      mountPath: /etc/ssl/certs/root-ca.crt
      subPath: root-ca.crt
      readOnly: true
  # OIDC secret config
  envFrom:
    - secretRef:
        name: oidc-wireguard

  persistence:
    enabled: true
    storageClass: 'local-path-retain'
    accessMode: ReadWriteOnce
    size: 1Gi

  service:
    mixed:
      enabled: false
      type: LoadBalancer
    web:
      type: ClusterIP
      port: 8888
      appProtocol: http
    wireguard:
      type: LoadBalancer
      externalTrafficPolicy: Local
      ports:
        - 51820
    metrics:
      port: 8787

  config:
    core:
      admin_user: admin
      admin_password: admin
      import_existing: false
      create_default_peer: true
      self_provisioning_allowed: true

    auth:
      callback_url_prefix: https://wireguard.k0s-fullstack.fredcorp.com/api/v0
      oauth:
        - id: Authentik
          provider_name: Authentik
          display_name: OIDC Authentik
          base_url: https://authentik.k0s-fullstack.fredcorp.com/application/o/fullstack-wireguard/
          client_id: '${OIDC_CLIENT_ID}'
          client_secret: '${OIDC_CLIENT_SECRET}'
          extra_scopes:
            - profile
            - email
            - openid
            - is_admin
          field_map:
            email: email
            user_identifier: email
            is_admin: 'true'
          registration_enabled: true

    web:
      external_url: https://wireguard.k0s-fullstack.fredcorp.com
    advanced:
      log_level: trace
      log_pretty: true
      log_json: false

  ingress:
    enabled: true
    className: traefik
    # annotations:
    #   traefik.ingress.kubernetes.io/router.middlewares: traefik-authentik@kubernetescrd
    tls: true
