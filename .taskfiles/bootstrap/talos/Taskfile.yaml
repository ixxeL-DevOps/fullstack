---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:
  genmachine:
    desc: Bootstrap genmachine cluster
    vars:
      cluster: genmachine
      TALOS_DIR: '{{.TALOS_ROOT}}/{{.cluster}}'
    env:
      TALOS_DIR: '{{.TALOS_DIR}}'
    cmds:
      - task: :talos:bootstrap
        vars:
          cluster: genmachine
      - task: save-config
        vars:
          cluster: genmachine
      - task: merge-configs
        vars:
          cluster: genmachine
      - task: deploy
        vars:
          cluster: genmachine

  staging:
    desc: Bootstrap staging cluster
    cmds:
      - task: :proxmox:reset-staging
      - task: :talos:bootstrap
        vars:
          cluster: staging
      - task: :proxmox:unmount-staging-cdrom
      - task: save-config
        vars:
          cluster: staging
      - task: merge-configs
      - task: deploy
        vars:
          cluster: staging

  deploy:
    desc: Bootstrap [cluster={{.cluster}}]
    requires:
      vars:
        - cluster
    preconditions:
      - talosctl --context {{.cluster}} config info
      - test -f "${KUBECONFIG}"
      - test -f "${TALOSCONFIG}"
      - test -f {{.TALOS_DIR}}/bootstrap/resources/prepare.sh
      - test -f {{.TALOS_DIR}}/bootstrap/resources/helmfile.yaml
    env:
      TALOS_DIR: '{{.TALOS_DIR}}'
      KUBECONFIG: '{{.TALOS_DIR}}/kubeconfig'
      TALOSCONFIG: '{{.TALOS_DIR}}/talosconfig'
      VAULT_ENDPOINT: '{{.VAULT_ENDPOINT}}'
      GITOPS_ROOT: '{{.GITOPS_ROOT}}'
      CLUSTER: '{{.cluster}}'
    vars:
      TALOS_DIR: '{{.TALOS_ROOT}}/{{.cluster}}'
    cmds:
      - bash {{.TALOS_DIR}}/bootstrap/resources/prepare.sh
      - helmfile --quiet --file {{.TALOS_DIR}}/bootstrap/resources/helmfile.yaml apply --skip-diff-on-install --suppress-diff

  save-config:
    desc: Save kubeconfig and talosconfig to HC Vault
    requires:
      vars:
        - cluster
    preconditions:
      - test -f "{{.TALOS_DIR}}/kubeconfig"
      - test -f "{{.TALOS_DIR}}/talosconfig"
    vars:
      TALOS_DIR: '{{.TALOS_ROOT}}/{{.cluster}}'
    cmds:
      - |
        vault kv put -tls-skip-verify -address={{.VAULT_ENDPOINT}} admin/kubernetes/{{.cluster}}/talos \
                      talosconfig=@{{.TALOS_DIR}}/talosconfig \
                      kubeconfig=@{{.TALOS_DIR}}/kubeconfig \
                      talosconfigb64=$(base64 -w0 < {{.TALOS_DIR}}/talosconfig) \
                      kubeconfigb64=$(base64 -w0 < {{.TALOS_DIR}}/kubeconfig)

  fetch-config:
    desc: Fetch kubeconfig and talosconfig from HC Vault
    requires:
      vars:
        - cluster
    vars:
      TALOS_DIR: '{{.TALOS_ROOT}}/{{.cluster}}'
    cmds:
      - vault kv get -field=talosconfigb64 -tls-skip-verify -address={{.VAULT_ENDPOINT}} admin/kubernetes/{{.cluster}}/talos | base64 -d > {{.TALOS_DIR}}/talosconfig
      - vault kv get -field=kubeconfigb64 -tls-skip-verify -address={{.VAULT_ENDPOINT}} admin/kubernetes/{{.cluster}}/talos | base64 -d > {{.TALOS_DIR}}/kubeconfig

  merge-configs:
    desc: Merge all configurations into ~/.kube and ~/.talos
    requires:
      vars:
        - cluster
    preconditions:
      - test -f "{{.TALOS_DIR}}/kubeconfig"
      - test -f "{{.TALOS_DIR}}/talosconfig"
    vars:
      TALOS_DIR: '{{.TALOS_ROOT}}/{{.cluster}}'
    cmds:
      - KUBECONFIG="$HOME/.kube/config:{{.TALOS_DIR}}/kubeconfig" kubectl config view --flatten > $HOME/.kube/config
      - talosctl --talosconfig $HOME/.talos/config config merge {{.TALOS_DIR}}/talosconfig
      - chmod og-rwx $HOME/.kube/config
      - chmod og-rwx $HOME/.talos/config
      - kubectl --kubeconfig=$HOME/.kube/config config use-context {{.cluster}}
      - talosctl --talosconfig $HOME/.talos/config config context {{.cluster}}
