---
apiVersion: v1
kind: Namespace
metadata:
  name: adguard
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-adguard-data
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  local:
    path: /var/lib/rancher/k3s/storage/adguard-data
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - k3d-k3d-home-server-0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-adguard-data
  namespace: adguard
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path
  volumeName: pv-adguard-data
---
# Source: adguard-home/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adguard-adguard-home
  namespace: adguard
---
# Source: adguard-home/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: adguard-adguard-home-http
  namespace: adguard
spec:
  selector:
    app.kubernetes.io/name: adguard-home
    app.kubernetes.io/instance: adguard
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
---
# Source: adguard-home/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: adguard-adguard-home-https
  namespace: adguard
spec:
  selector:
    app.kubernetes.io/name: adguard-home
    app.kubernetes.io/instance: adguard
  type: ClusterIP
  ports:
  - port: 443
    targetPort: https
    protocol: TCP
---
# Source: adguard-home/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: adguard-adguard-home-dns
  namespace: adguard
spec:
  selector:
    app.kubernetes.io/name: adguard-home
    app.kubernetes.io/instance: adguard
  type: NodePort
  ports:
  - port: 53
    name: dns-tcp
    targetPort: dns-tcp
    protocol: TCP
  - port: 53
    name: dns-udp
    targetPort: dns-udp
    protocol: UDP
---
# Source: adguard-home/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: adguard-adguard-home-dot
  namespace: adguard
spec:
  selector:
    app.kubernetes.io/name: adguard-home
    app.kubernetes.io/instance: adguard
  type: NodePort
  ports:
  - port: 853
    targetPort: dot
    protocol: TCP
---
# Source: adguard-home/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: adguard-adguard-home-doq
  namespace: adguard
spec:
  selector:
    app.kubernetes.io/name: adguard-home
    app.kubernetes.io/instance: adguard
  type: NodePort
  ports:
  - port: 784
    name: dns-over-quic-1
    targetPort: doq-1
    protocol: UDP
  - port: 8853
    name: dns-over-quic-3
    targetPort: doq-2
    protocol: UDP
---
# Source: adguard-home/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: adguard-adguard-home-dnscrypt
  namespace: adguard
spec:
  selector:
    app.kubernetes.io/name: adguard-home
    app.kubernetes.io/instance: adguard
  type: NodePort
  ports:
  - name: dnscrypt-tcp
    port: 5443
    targetPort: dnscrypt-tcp
    protocol: TCP
  - name: dnscrypt-udp
    port: 5443
    targetPort: dnscrypt-udp
    protocol: UDP
---
# Source: adguard-home/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adguard-adguard-home
  namespace: adguard
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: adguard-home
      app.kubernetes.io/instance: adguard
  strategy:
    {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: adguard-home
        app.kubernetes.io/instance: adguard
    spec:
      priorityClassName: 
      hostNetwork: false
      serviceAccountName: adguard-adguard-home
      securityContext:
        {}
      volumes:
      - name: data-vol
        persistentVolumeClaim:
          claimName: pvc-adguard-data
      containers:
        - name: adguard-home
          securityContext:
            {}
          image: "adguard/adguardhome:v0.107.56"
          imagePullPolicy: IfNotPresent
          command:
          - /opt/adguardhome/AdGuardHome
          - --no-check-update
          - -c
          - /opt/adguardhome/conf/AdGuardHome.yaml
          - -w
          - /opt/adguardhome/work
          - --web-addr
          - "0.0.0.0:80"
          ports:
          - name: http
            containerPort: 80
            protocol: TCP
          - name: https
            containerPort: 443
            protocol: TCP
          - name: dns-tcp
            containerPort: 53
            protocol: TCP
          - name: dns-udp
            containerPort: 53
            protocol: UDP
          - name: dot
            containerPort: 853
            protocol: TCP
          - name: dnscrypt-tcp
            containerPort: 5443
            protocol: TCP
          - name: dnscrypt-udp
            containerPort: 5443
            protocol: UDP
          - name: doq-1
            containerPort: 784
            protocol: UDP
          - name: doq-2
            containerPort: 8853
            protocol: UDP
          livenessProbe:
            null
          readinessProbe:
            null
          startupProbe:
            null
          resources:
            {}
          volumeMounts:
          - name: data-vol
            mountPath: /opt/adguardhome/work
            subPath: work
          - name: data-vol
            mountPath: /opt/adguardhome/conf
            subPath: conf
---
# Source: adguard-home/templates/ingresses.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: adguard-adguard-home-http
  namespace: adguard
spec:
  ingressClassName: traefik
  rules:
    - host: "adguard.fullstack.fredcorp.com"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: adguard-adguard-home-http
                port:
                  number: 80
---
# Source: adguard-home/templates/ingresses.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: adguard-adguard-home-https
  namespace: adguard
spec:
  ingressClassName: traefik
  rules:
    - host: "adguard-secure.fullstack.fredcorp.com"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: adguard-adguard-home-https
                port:
                  number: 443
